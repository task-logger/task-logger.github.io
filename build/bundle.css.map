{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\Container.svelte",
    "..\\..\\Input.svelte",
    "..\\..\\Page.svelte",
    "..\\..\\TaskView.svelte",
    "..\\..\\TaskViewContainer.svelte"
  ],
  "sourcesContent": [
    "<div>\r\n\t<slot></slot>\r\n</div>\r\n\r\n<style>\r\n\tdiv {\r\n\t\tbackground-color: #dddddd;\r\n\t\tmargin: 20px 50px 0;\r\n\t\tborder-radius: 10px;\r\n\t\tborder: 1px solid black;\r\n\t\tpadding: 50px;\r\n\t\talign-content: center;\r\n\t\ttext-align: center;\r\n\t}\r\n</style>\r\n",
    "<script lang=\"ts\">import ClearButton from \"./ClearButton.svelte\";\r\nimport { Store } from \"../store/Store\";\r\nlet task = \"\";\r\nconst { Tasks } = Store;\r\nfunction handleKeypress(event) {\r\n    if (event.key === \"Enter\") {\r\n        Tasks.add(task);\r\n        task = \"\";\r\n    }\r\n}\r\n</script>\r\n\r\n<input\r\n\t\ttype=\"text\"\r\n\t\tplaceholder=\"Start task\"\r\n\t\tbind:value={task}\r\n\t\ton:keypress={handleKeypress}\r\n/>\r\n\r\n<ClearButton/>\r\n\r\n<style>\r\n\tinput {\r\n\t\twidth: 80%;\r\n\t}\r\n</style>\r\n",
    "<script lang=\"ts\">import Input from \"./Input.svelte\";\r\nimport Container from \"./Container.svelte\";\r\nimport TaskViewContainer from \"./TaskViewContainer.svelte\";\r\nimport { formatDate } from \"../helpers/DateTimeHelper\";\r\n</script>\r\n\r\n<Container>\r\n\t<h2>{formatDate(new Date())}</h2>\r\n\t<Input/>\r\n\t<hr/>\r\n\r\n\t<TaskViewContainer/>\r\n</Container>\r\n\r\n<style>\r\n\th2 {\r\n\t\tcolor: #ff0000;\r\n\t}\r\n</style>\r\n",
    "<script lang=\"ts\">import { getTotalWorkingTimeStr } from \"../helpers/DateTimeHelper\";\r\nimport { afterUpdate } from \"svelte\";\r\nimport { Store } from \"../store/Store\";\r\nconst { currentTask } = Store;\r\nexport let works;\r\nexport let taskName;\r\nlet workedTime = getTotalWorkingTimeStr(works);\r\nlet clockInterval = 0;\r\nconst startInterval = () => {\r\n    clockInterval = ($currentTask === taskName) && setInterval(() => {\r\n        workedTime = getTotalWorkingTimeStr(works);\r\n    }, 1000);\r\n};\r\nconst clearRunningInterval = () => {\r\n    clearInterval(clockInterval);\r\n    clockInterval = 0;\r\n};\r\nstartInterval();\r\nafterUpdate(() => {\r\n    if ($currentTask !== taskName) {\r\n        clearRunningInterval();\r\n    }\r\n    else {\r\n        if (clockInterval === 0) {\r\n            startInterval();\r\n        }\r\n    }\r\n});\r\n</script>\r\n\r\n<tr class:current={$currentTask === taskName}>\r\n\t<td>{taskName}</td>\r\n\t<td>{workedTime}</td>\r\n</tr>\r\n\r\n<style>\r\n\t.current {\r\n\t\tcolor: white;\r\n\t\tbackground-color: green;\r\n\t}\r\n</style>\r\n\r\n",
    "<script lang=\"ts\">import { onDestroy } from \"svelte\";\r\nimport { Store } from \"../store/Store\";\r\nimport TaskView from \"./TaskView.svelte\";\r\nconst { Tasks } = Store;\r\nlet allTasks, taskNames, current;\r\nconst unsubscribe = Tasks.subscribe(newValue => {\r\n    allTasks = newValue;\r\n    taskNames = Object.keys(allTasks.tasks);\r\n    current = allTasks.current;\r\n});\r\nonDestroy(() => {\r\n    unsubscribe();\r\n});\r\n</script>\r\n{#if allTasks && taskNames.length > 0}\r\n\t<table class=\"tasks-container\">\r\n\t\t<thead>\r\n\t\t\t<tr>\r\n\t\t\t\t<th>Task name</th>\r\n\t\t\t\t<th>Worked Time (hh:mm:ss)</th>\r\n\t\t\t</tr>\r\n\t\t</thead>\r\n\t\t<tbody>\r\n\t\t\t{#each taskNames as taskName}\r\n\t\t\t\t<TaskView works={allTasks.tasks[taskName]} taskName={taskName}/>\r\n\t\t\t{/each}\r\n\t\t</tbody>\r\n\t</table>\r\n{:else}\r\n\t<div>There is no available task!</div>\r\n{/if}\r\n\r\n<style>\r\n\t.tasks-container {\r\n\t\twidth: 100%;\r\n\t}\r\n\tth {\r\n\t\twidth: 50%;\r\n\t}\r\n</style>\r\n"
  ],
  "names": [],
  "mappings": "AAKC,GAAG,cAAC,CAAC,AACJ,gBAAgB,CAAE,OAAO,CACzB,MAAM,CAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CACnB,aAAa,CAAE,IAAI,CACnB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CACvB,OAAO,CAAE,IAAI,CACb,aAAa,CAAE,MAAM,CACrB,UAAU,CAAE,MAAM,AACnB,CAAC;ACSD,KAAK,cAAC,CAAC,AACN,KAAK,CAAE,GAAG,AACX,CAAC;ACTD,EAAE,cAAC,CAAC,AACH,KAAK,CAAE,OAAO,AACf,CAAC;ACmBD,QAAQ,eAAC,CAAC,AACT,KAAK,CAAE,KAAK,CACZ,gBAAgB,CAAE,KAAK,AACxB,CAAC;ACND,gBAAgB,eAAC,CAAC,AACjB,KAAK,CAAE,IAAI,AACZ,CAAC,AACD,EAAE,eAAC,CAAC,AACH,KAAK,CAAE,GAAG,AACX,CAAC"
}