{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\Container.svelte",
    "..\\..\\Input.svelte",
    "..\\..\\Page.svelte"
  ],
  "sourcesContent": [
    "<div>\r\n\t<slot></slot>\r\n</div>\r\n\r\n<style>\r\n\tdiv {\r\n\t\tbackground-color: #dddddd;\r\n\t\tmargin: 20px 50px 0;\r\n\t\tborder-radius: 10px;\r\n\t\tborder: 1px solid black;\r\n\t\tpadding: 50px;\r\n\t\talign-content: center;\r\n\t\ttext-align: center;\r\n\t}\r\n</style>\r\n",
    "<script>\r\n\timport { setObj } from \"../helper/localStorage\";\r\n\timport { getObj } from \"../helper/localStorage\";\r\n\timport { tasks_store } from \"../store/store\";\r\n\r\n\tlet task = \"\";\r\n\r\n\tfunction handleKeypress(event) {\r\n\t\tif (event.key === \"Enter\") {\r\n\t\t\ttask = task.trim();\r\n\t\t\tconst currentTasks = getObj(\"tasks\") || [];\r\n\t\t\tconst newTasks = [\r\n\t\t\t\t...currentTasks,\r\n\t\t\t\ttask\r\n\t\t\t]\r\n\t\t\tsetObj(\"tasks\", newTasks);\r\n\t\t\ttasks_store.update(() => newTasks);\r\n\t\t\ttask = \"\";\r\n\t\t}\r\n\t}\r\n\r\n\tfunction handleClear() {\r\n\t\tsetObj(\"tasks\", []);\r\n\t\ttasks_store.update(() => []);\r\n\t}\r\n</script>\r\n\r\n<input\r\n\ttype=\"text\"\r\n\tplaceholder=\"Start task\"\r\n\tbind:value={task}\r\n\ton:keypress={handleKeypress}\r\n/>\r\n<button\r\n\ton:click={handleClear}\r\n>\r\n\tClear\r\n</button>\r\n\r\n<style>\r\n\tinput {\r\n\t\twidth: 80%;\r\n\t}\r\n</style>\r\n",
    "<script>\r\n\timport Input from \"./Input.svelte\";\r\n\timport Container from \"./Container.svelte\";\r\n\timport { onMount, onDestroy } from \"svelte\";\r\n\timport { getObj } from \"../helper/localStorage\";\r\n\timport { tasks_store } from \"../store/store\";\r\n\r\n\tlet tasks;\r\n\tconst unsubscribe = tasks_store.subscribe(newValue => {\r\n\t\ttasks = newValue;\r\n\t});\r\n\r\n\t// TODO Load initial tasks\r\n\tonMount(() => {\r\n\t\ttasks = getObj(\"tasks\");\r\n\t});\r\n\tonDestroy(() => {\r\n\t\tunsubscribe();\r\n\t});\r\n</script>\r\n\r\n<Container>\r\n\t<h2>Task Logger</h2>\r\n\t<Input/>\r\n\t<hr/>\r\n\r\n\t{#if tasks && tasks.length}\r\n\t\t{#each tasks as task}\r\n\t\t\t<div>{task}</div>\r\n\t\t{/each}\r\n\t\t{:else}\r\n\t\t<div>There is no available task!</div>\r\n\t{/if}\r\n</Container>\r\n\r\n<style>\r\n\th2 {\r\n\t\tcolor: #ff0000;\r\n\t}\r\n</style>\r\n"
  ],
  "names": [],
  "mappings": "AAKC,GAAG,cAAC,CAAC,AACJ,gBAAgB,CAAE,OAAO,CACzB,MAAM,CAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CACnB,aAAa,CAAE,IAAI,CACnB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CACvB,OAAO,CAAE,IAAI,CACb,aAAa,CAAE,MAAM,CACrB,UAAU,CAAE,MAAM,AACnB,CAAC;AC2BD,KAAK,cAAC,CAAC,AACN,KAAK,CAAE,GAAG,AACX,CAAC;ACND,EAAE,cAAC,CAAC,AACH,KAAK,CAAE,OAAO,AACf,CAAC"
}